# Generated by Django 3.2.7 on 2022-04-05 05:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('topic', '0009_topicstudentevaluation_topic'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ac',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auth_state', models.CharField(default='A', max_length=3)),
                ('real_problem', models.TextField()),
                ('context_video', models.URLField(blank=True, null=True)),
                ('path_reference', models.URLField(blank=True, null=True)),
                ('context_audio', models.JSONField(blank=True, default=dict, null=True)),
                ('state', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Close'), (1, 'Open')], default=1)),
                ('topic', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='topic.topic')),
            ],
            options={
                'verbose_name': 'AC',
                'db_table': 'ac',
            },
        ),
        migrations.CreateModel(
            name='RubricAc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auth_state', models.CharField(default='A', max_length=3)),
                ('description_rubric', models.TextField(blank=True, null=True)),
                ('ac_final_value', models.FloatField(default=0)),
                ('observations', models.TextField(blank=True, null=True)),
                ('state', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Close'), (1, 'Open')], default=1)),
                ('ac', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ac.ac')),
            ],
            options={
                'verbose_name': 'RubricAc',
                'verbose_name_plural': 'RubricsAc',
                'db_table': 'rubric_ac',
            },
        ),
        migrations.CreateModel(
            name='RubricDetailAc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auth_state', models.CharField(default='A', max_length=3)),
                ('active', models.BooleanField(blank=True, default=True)),
                ('detail_title', models.CharField(max_length=250)),
                ('detail_description', models.TextField(blank=True, null=True)),
                ('percentage_grade', models.FloatField()),
                ('rating_value', models.FloatField(default=0)),
                ('observations', models.TextField(blank=True, null=True)),
                ('rubric_ac', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ac.rubricac')),
            ],
            options={
                'verbose_name': 'RubricDetailAc',
                'verbose_name_plural': 'RubricDetailsAc',
                'db_table': 'rubric_detail_ac',
            },
        ),
        migrations.CreateModel(
            name='StudentEvaluationAc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auth_state', models.CharField(default='A', max_length=3)),
                ('description', models.TextField()),
                ('evaluation_type', models.PositiveSmallIntegerField(choices=[(1, 'Autoevaluation'), (2, 'Coevaluation')])),
                ('final_value', models.FloatField()),
                ('observations', models.TextField(blank=True, null=True)),
                ('state', models.PositiveSmallIntegerField(choices=[(0, 'Close'), (1, 'Open')])),
                ('rubric_ac', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ac.rubricac')),
            ],
            options={
                'verbose_name': 'StudentEvaluationAc',
                'verbose_name_plural': 'StudentEvaluationsAc',
                'db_table': 'student_evaluation_ac',
            },
        ),
        migrations.CreateModel(
            name='TeamAc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auth_state', models.CharField(default='A', max_length=3)),
                ('active', models.BooleanField(blank=True, default=True)),
                ('observations', models.TextField(blank=True, null=True)),
                ('ac', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ac.ac')),
            ],
            options={
                'verbose_name': 'TeamAc',
                'verbose_name_plural': 'TeamsAc',
                'db_table': 'team_ac',
            },
        ),
        migrations.CreateModel(
            name='TeamDetailAc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auth_state', models.CharField(default='A', max_length=3)),
                ('active', models.BooleanField(blank=True, default=True)),
                ('role_type', models.PositiveSmallIntegerField(choices=[(1, 'Coordinator'), (2, 'Spokesman'), (3, 'Organizer'), (4, 'Secretary')])),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('team_ac', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ac.teamac')),
            ],
            options={
                'verbose_name': 'TeamDetailAc',
                'verbose_name_plural': 'TeamDetailsAc',
                'db_table': 'team_detail_ac',
            },
        ),
        migrations.CreateModel(
            name='StudentEvaluationDetailAc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auth_state', models.CharField(default='A', max_length=3)),
                ('active', models.BooleanField(blank=True, default=True)),
                ('detail_value', models.FloatField()),
                ('rubric_detail_ac', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ac.rubricdetailac')),
                ('student_evaluation_ac', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ac.studentevaluationac')),
            ],
            options={
                'verbose_name': 'StudentEvaluationDetailAc',
                'verbose_name_plural': 'StudentEvaluationDetailsAc',
                'db_table': 'student_evaluation_detail_ac',
            },
        ),
        migrations.AddField(
            model_name='studentevaluationac',
            name='team_detail_ac',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ac.teamdetailac'),
        ),
    ]
